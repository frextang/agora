// symbol index generated by DDOX - do not edit
var symbols = [
{name: 'agora.api.FullNode', kind: "module", path: './agora/api/FullNode.html', attributes: []},
{name: 'agora.api.FullNode.API', kind: "interfacedeclaration", path: './agora/api/FullNode/API.html', attributes: []},
{name: 'agora.api.FullNode.API.enrollValidator', kind: "functiondeclaration", path: './agora/api/FullNode/API.enrollValidator.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getBlockHeight', kind: "functiondeclaration", path: './agora/api/FullNode/API.getBlockHeight.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getBlocksFrom', kind: "functiondeclaration", path: './agora/api/FullNode/API.getBlocksFrom.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getEnrollment', kind: "functiondeclaration", path: './agora/api/FullNode/API.getEnrollment.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getMerklePath', kind: "functiondeclaration", path: './agora/api/FullNode/API.getMerklePath.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getNodeInfo', kind: "functiondeclaration", path: './agora/api/FullNode/API.getNodeInfo.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.getPreimage', kind: "functiondeclaration", path: './agora/api/FullNode/API.getPreimage.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.hasTransactionHash', kind: "functiondeclaration", path: './agora/api/FullNode/API.hasTransactionHash.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.putTransaction', kind: "functiondeclaration", path: './agora/api/FullNode/API.putTransaction.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.receivePreimage', kind: "functiondeclaration", path: './agora/api/FullNode/API.receivePreimage.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.API.registerListener', kind: "functiondeclaration", path: './agora/api/FullNode/API.registerListener.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.FullNode.NetworkState', kind: "enumdeclaration", path: './agora/api/FullNode/NetworkState.html', attributes: []},
{name: 'agora.api.FullNode.NodeInfo', kind: "structdeclaration", path: './agora/api/FullNode/NodeInfo.html', attributes: []},
{name: 'agora.api.FullNode.NodeInfo.addresses', kind: "variabledeclaration", path: './agora/api/FullNode/NodeInfo.addresses.html', attributes: []},
{name: 'agora.api.FullNode.NodeInfo.state', kind: "variabledeclaration", path: './agora/api/FullNode/NodeInfo.state.html', attributes: []},
{name: 'agora.api.Validator', kind: "module", path: './agora/api/Validator.html', attributes: []},
{name: 'agora.api.Validator.API', kind: "interfacedeclaration", path: './agora/api/Validator/API.html', attributes: []},
{name: 'agora.api.Validator.API.getPublicKey', kind: "functiondeclaration", path: './agora/api/Validator/API.getPublicKey.html', attributes: ["abstract", "safe"]},
{name: 'agora.api.Validator.API.receiveEnvelope', kind: "functiondeclaration", path: './agora/api/Validator/API.receiveEnvelope.html', attributes: ["abstract", "safe"]},
{name: 'agora.common.crypto.Crc16', kind: "module", path: './agora/common/crypto/Crc16.html', attributes: []},
{name: 'agora.common.crypto.Crc16.checksum', kind: "functiondeclaration", path: './agora/common/crypto/Crc16/checksum.html', attributes: []},
{name: 'agora.common.crypto.Crc16.validate', kind: "functiondeclaration", path: './agora/common/crypto/Crc16/validate.html', attributes: []},
{name: 'agora.common.crypto.ECC', kind: "module", path: './agora/common/crypto/ECC.html', attributes: []},
{name: 'agora.common.crypto.ECC.Point', kind: "structdeclaration", path: './agora/common/crypto/ECC/Point.html', attributes: []},
{name: 'agora.common.crypto.ECC.Point.fromString', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.fromString.html', attributes: ["static", "safe"]},
{name: 'agora.common.crypto.ECC.Point.opBinary', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.opBinary.html', attributes: ["const", "nothrow", "nogc", "trusted"]},
{name: 'agora.common.crypto.ECC.Point.opBinaryRight', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.opBinaryRight.html', attributes: ["const", "nothrow", "nogc", "trusted"]},
{name: 'agora.common.crypto.ECC.Point.opCmp', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.opCmp.html', attributes: ["const"]},
{name: 'agora.common.crypto.ECC.Point.opSlice', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.opSlice.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.common.crypto.ECC.Point.serialize', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.common.crypto.ECC.Point.this', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.this.html', attributes: ["nothrow", "nogc"]},
{name: 'agora.common.crypto.ECC.Point.toString', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Point.toString.html', attributes: ["safe", "const"]},
{name: 'agora.common.crypto.ECC.Scalar', kind: "structdeclaration", path: './agora/common/crypto/ECC/Scalar.html', attributes: []},
{name: 'agora.common.crypto.ECC.Scalar.fromString', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.fromString.html', attributes: ["static", "safe"]},
{name: 'agora.common.crypto.ECC.Scalar.opBinary', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.opBinary.html', attributes: ["const", "nothrow", "nogc", "trusted"]},
{name: 'agora.common.crypto.ECC.Scalar.opUnary', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.opUnary.html', attributes: ["const", "nothrow", "nogc", "trusted"]},
{name: 'agora.common.crypto.ECC.Scalar.random', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.random.html', attributes: ["static", "nothrow", "nogc", "trusted"]},
{name: 'agora.common.crypto.ECC.Scalar.serialize', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.common.crypto.ECC.Scalar.this', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.this.html', attributes: []},
{name: 'agora.common.crypto.ECC.Scalar.toPoint', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.toPoint.html', attributes: ["nothrow", "nogc", "trusted", "const"]},
{name: 'agora.common.crypto.ECC.Scalar.toString', kind: "functiondeclaration", path: './agora/common/crypto/ECC/Scalar.toString.html', attributes: ["safe", "const"]},
{name: 'agora.common.crypto.Key', kind: "module", path: './agora/common/crypto/Key.html', attributes: []},
{name: 'agora.common.crypto.Key.KeyPair', kind: "structdeclaration", path: './agora/common/crypto/Key/KeyPair.html', attributes: []},
{name: 'agora.common.crypto.Key.KeyPair.address', kind: "variabledeclaration", path: './agora/common/crypto/Key/KeyPair.address.html', attributes: []},
{name: 'agora.common.crypto.Key.KeyPair.fromSeed', kind: "functiondeclaration", path: './agora/common/crypto/Key/KeyPair.fromSeed.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'agora.common.crypto.Key.KeyPair.random', kind: "functiondeclaration", path: './agora/common/crypto/Key/KeyPair.random.html', attributes: ["static", "nogc"]},
{name: 'agora.common.crypto.Key.KeyPair.secret', kind: "variabledeclaration", path: './agora/common/crypto/Key/KeyPair.secret.html', attributes: []},
{name: 'agora.common.crypto.Key.KeyPair.seed', kind: "variabledeclaration", path: './agora/common/crypto/Key/KeyPair.seed.html', attributes: []},
{name: 'agora.common.crypto.Key.PublicKey', kind: "structdeclaration", path: './agora/common/crypto/Key/PublicKey.html', attributes: []},
{name: 'agora.common.crypto.Key.PublicKey.fromString', kind: "functiondeclaration", path: './agora/common/crypto/Key/PublicKey.fromString.html', attributes: ["static", "trusted"]},
{name: 'agora.common.crypto.Key.PublicKey.serialize', kind: "functiondeclaration", path: './agora/common/crypto/Key/PublicKey.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.common.crypto.Key.PublicKey.this', kind: "functiondeclaration", path: './agora/common/crypto/Key/PublicKey.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'agora.common.crypto.Key.PublicKey.toString', kind: "functiondeclaration", path: './agora/common/crypto/Key/PublicKey.toString.html', attributes: ["trusted", "const"]},
{name: 'agora.common.crypto.Key.PublicKey.verify', kind: "functiondeclaration", path: './agora/common/crypto/Key/PublicKey.verify.html', attributes: ["nothrow", "nogc", "trusted", "const"]},
{name: 'agora.common.crypto.Key.SecretKey', kind: "structdeclaration", path: './agora/common/crypto/Key/SecretKey.html', attributes: []},
{name: 'agora.common.crypto.Key.SecretKey.sign', kind: "functiondeclaration", path: './agora/common/crypto/Key/SecretKey.sign.html', attributes: ["nothrow", "nogc", "const"]},
{name: 'agora.common.crypto.Key.SecretKey.this', kind: "functiondeclaration", path: './agora/common/crypto/Key/SecretKey.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'agora.common.crypto.Key.secretKeyToCurveScalar', kind: "functiondeclaration", path: './agora/common/crypto/Key/secretKeyToCurveScalar.html', attributes: ["static", "nothrow", "nogc"]},
{name: 'agora.common.crypto.Key.Seed', kind: "structdeclaration", path: './agora/common/crypto/Key/Seed.html', attributes: []},
{name: 'agora.common.crypto.Key.Seed.fromString', kind: "functiondeclaration", path: './agora/common/crypto/Key/Seed.fromString.html', attributes: ["static"]},
{name: 'agora.common.crypto.Key.Seed.this', kind: "functiondeclaration", path: './agora/common/crypto/Key/Seed.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'agora.common.crypto.Key.Seed.toString', kind: "functiondeclaration", path: './agora/common/crypto/Key/Seed.toString.html', attributes: ["const"]},
{name: 'agora.common.crypto.Key.VersionByte', kind: "enumdeclaration", path: './agora/common/crypto/Key/VersionByte.html', attributes: []},
{name: 'agora.common.crypto.Key.VersionByte.AccountID', kind: "enummemberdeclaration", path: './agora/common/crypto/Key/VersionByte.html#AccountID', attributes: []},
{name: 'agora.common.crypto.Key.VersionByte.HashTx', kind: "enummemberdeclaration", path: './agora/common/crypto/Key/VersionByte.html#HashTx', attributes: []},
{name: 'agora.common.crypto.Key.VersionByte.HashX', kind: "enummemberdeclaration", path: './agora/common/crypto/Key/VersionByte.html#HashX', attributes: []},
{name: 'agora.common.crypto.Key.VersionByte.Seed', kind: "enummemberdeclaration", path: './agora/common/crypto/Key/VersionByte.html#Seed', attributes: []},
{name: 'agora.common.crypto.Schnorr', kind: "module", path: './agora/common/crypto/Schnorr.html', attributes: []},
{name: 'agora.common.crypto.Schnorr.Pair', kind: "structdeclaration", path: './agora/common/crypto/Schnorr/Pair.html', attributes: []},
{name: 'agora.common.crypto.Schnorr.Pair.random', kind: "functiondeclaration", path: './agora/common/crypto/Schnorr/Pair.random.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'agora.common.crypto.Schnorr.Pair.V', kind: "variabledeclaration", path: './agora/common/crypto/Schnorr/Pair.V.html', attributes: []},
{name: 'agora.common.crypto.Schnorr.Pair.v', kind: "variabledeclaration", path: './agora/common/crypto/Schnorr/Pair.v.html', attributes: []},
{name: 'agora.common.crypto.Schnorr.sign', kind: "functiondeclaration", path: './agora/common/crypto/Schnorr/sign.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'agora.common.crypto.Schnorr.verify', kind: "functiondeclaration", path: './agora/common/crypto/Schnorr/verify.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'agora.common.Amount', kind: "module", path: './agora/common/Amount.html', attributes: []},
{name: 'agora.common.Amount.Amount', kind: "structdeclaration", path: './agora/common/Amount/Amount.html', attributes: []},
{name: 'agora.common.Amount.Amount.add', kind: "functiondeclaration", path: './agora/common/Amount/Amount.add.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.Amount.Amount.decimal', kind: "functiondeclaration", path: './agora/common/Amount/Amount.decimal.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.common.Amount.Amount.div', kind: "functiondeclaration", path: './agora/common/Amount/Amount.div.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.Amount.Amount.fromString', kind: "functiondeclaration", path: './agora/common/Amount/Amount.fromString.html', attributes: ["static", "pure", "safe"]},
{name: 'agora.common.Amount.Amount.integral', kind: "functiondeclaration", path: './agora/common/Amount/Amount.integral.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.common.Amount.Amount.isInRange', kind: "functiondeclaration", path: './agora/common/Amount/Amount.isInRange.html', attributes: ["static", "pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.Amount.Amount.isValid', kind: "functiondeclaration", path: './agora/common/Amount/Amount.isValid.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.common.Amount.Amount.MaxCoinSupply', kind: "variabledeclaration", path: './agora/common/Amount/Amount.MaxCoinSupply.html', attributes: []},
{name: 'agora.common.Amount.Amount.MaxUnitSupply', kind: "variabledeclaration", path: './agora/common/Amount/Amount.MaxUnitSupply.html', attributes: []},
{name: 'agora.common.Amount.Amount.MinFreezeAmount', kind: "variabledeclaration", path: './agora/common/Amount/Amount.MinFreezeAmount.html', attributes: []},
{name: 'agora.common.Amount.Amount.mustAdd', kind: "functiondeclaration", path: './agora/common/Amount/Amount.mustAdd.html', attributes: ["pure", "nothrow", "ref", "nogc", "return", "safe"]},
{name: 'agora.common.Amount.Amount.mustSub', kind: "functiondeclaration", path: './agora/common/Amount/Amount.mustSub.html', attributes: ["pure", "nothrow", "ref", "nogc", "return", "safe"]},
{name: 'agora.common.Amount.Amount.opCmp', kind: "functiondeclaration", path: './agora/common/Amount/Amount.opCmp.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.common.Amount.Amount.sub', kind: "functiondeclaration", path: './agora/common/Amount/Amount.sub.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.Amount.Amount.this', kind: "functiondeclaration", path: './agora/common/Amount/Amount.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'agora.common.Amount.Amount.toString', kind: "functiondeclaration", path: './agora/common/Amount/Amount.toString.html', attributes: ["safe", "const"]},
{name: 'agora.common.Amount.Amount.UnitPerCoin', kind: "variabledeclaration", path: './agora/common/Amount/Amount.UnitPerCoin.html', attributes: []},
{name: 'agora.common.BanManager', kind: "module", path: './agora/common/BanManager.html', attributes: []},
{name: 'agora.common.BanManager.BanManager', kind: "classdeclaration", path: './agora/common/BanManager/BanManager.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.ban', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.ban.html', attributes: ["nothrow", "safe"]},
{name: 'agora.common.BanManager.BanManager.banFor', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.banFor.html', attributes: ["nothrow", "safe"]},
{name: 'agora.common.BanManager.BanManager.banUntil', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.banUntil.html', attributes: ["nothrow", "safe"]},
{name: 'agora.common.BanManager.BanManager.Config', kind: "structdeclaration", path: './agora/common/BanManager/BanManager.Config.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.Config.ban_duration', kind: "variabledeclaration", path: './agora/common/BanManager/BanManager.Config.ban_duration.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.Config.max_failed_requests', kind: "variabledeclaration", path: './agora/common/BanManager/BanManager.Config.max_failed_requests.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.dump', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.dump.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.getUnbanTime', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.getUnbanTime.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.BanManager.BanManager.isBanned', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.isBanned.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'agora.common.BanManager.BanManager.load', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.load.html', attributes: []},
{name: 'agora.common.BanManager.BanManager.onFailedRequest', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.onFailedRequest.html', attributes: ["nothrow", "safe"]},
{name: 'agora.common.BanManager.BanManager.this', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'agora.common.BanManager.BanManager.getCurTime', kind: "functiondeclaration", path: './agora/common/BanManager/BanManager.getCurTime.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'agora.common.BitField', kind: "module", path: './agora/common/BitField.html', attributes: []},
{name: 'agora.common.BitField.BitField', kind: "structdeclaration", path: './agora/common/BitField/BitField.html', attributes: []},
{name: 'agora.common.BitField.BitField._storage', kind: "variabledeclaration", path: './agora/common/BitField/BitField._storage.html', attributes: []},
{name: 'agora.common.BitField.BitField.BitsPerT', kind: "enummemberdeclaration", path: './agora/common/BitField/BitField.BitsPerT.html', attributes: []},
{name: 'agora.common.BitField.BitField.length', kind: "functiondeclaration", path: './agora/common/BitField/BitField.length.html', attributes: ["const"]},
{name: 'agora.common.BitField.BitField.mask', kind: "functiondeclaration", path: './agora/common/BitField/BitField.mask.html', attributes: ["static"]},
{name: 'agora.common.BitField.BitField.opEquals', kind: "functiondeclaration", path: './agora/common/BitField/BitField.opEquals.html', attributes: ["const"]},
{name: 'agora.common.BitField.BitField.opIndex', kind: "functiondeclaration", path: './agora/common/BitField/BitField.opIndex.html', attributes: ["const"]},
{name: 'agora.common.BitField.BitField.opIndexAssign', kind: "functiondeclaration", path: './agora/common/BitField/BitField.opIndexAssign.html', attributes: []},
{name: 'agora.common.BitField.BitField.this', kind: "functiondeclaration", path: './agora/common/BitField/BitField.this.html', attributes: ["inout"]},
{name: 'agora.common.Config', kind: "module", path: './agora/common/Config.html', attributes: []},
{name: 'agora.common.Config.AdminConfig', kind: "structdeclaration", path: './agora/common/Config/AdminConfig.html', attributes: []},
{name: 'agora.common.Config.AdminConfig.address', kind: "variabledeclaration", path: './agora/common/Config/AdminConfig.address.html', attributes: []},
{name: 'agora.common.Config.AdminConfig.enabled', kind: "variabledeclaration", path: './agora/common/Config/AdminConfig.enabled.html', attributes: []},
{name: 'agora.common.Config.AdminConfig.port', kind: "variabledeclaration", path: './agora/common/Config/AdminConfig.port.html', attributes: []},
{name: 'agora.common.Config.CommandLine', kind: "structdeclaration", path: './agora/common/Config/CommandLine.html', attributes: []},
{name: 'agora.common.Config.CommandLine.config_check', kind: "variabledeclaration", path: './agora/common/Config/CommandLine.config_check.html', attributes: []},
{name: 'agora.common.Config.CommandLine.config_path', kind: "variabledeclaration", path: './agora/common/Config/CommandLine.config_path.html', attributes: []},
{name: 'agora.common.Config.CommandLine.overrides', kind: "variabledeclaration", path: './agora/common/Config/CommandLine.overrides.html', attributes: []},
{name: 'agora.common.Config.Config', kind: "structdeclaration", path: './agora/common/Config/Config.html', attributes: []},
{name: 'agora.common.Config.Config.admin', kind: "variabledeclaration", path: './agora/common/Config/Config.admin.html', attributes: []},
{name: 'agora.common.Config.Config.banman', kind: "variabledeclaration", path: './agora/common/Config/Config.banman.html', attributes: []},
{name: 'agora.common.Config.Config.dns_seeds', kind: "variabledeclaration", path: './agora/common/Config/Config.dns_seeds.html', attributes: []},
{name: 'agora.common.Config.Config.logging', kind: "variabledeclaration", path: './agora/common/Config/Config.logging.html', attributes: []},
{name: 'agora.common.Config.Config.network', kind: "variabledeclaration", path: './agora/common/Config/Config.network.html', attributes: []},
{name: 'agora.common.Config.Config.node', kind: "variabledeclaration", path: './agora/common/Config/Config.node.html', attributes: []},
{name: 'agora.common.Config.LoggingConfig', kind: "structdeclaration", path: './agora/common/Config/LoggingConfig.html', attributes: []},
{name: 'agora.common.Config.LoggingConfig.log_level', kind: "variabledeclaration", path: './agora/common/Config/LoggingConfig.log_level.html', attributes: []},
{name: 'agora.common.Config.NodeConfig', kind: "structdeclaration", path: './agora/common/Config/NodeConfig.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.address', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.address.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.data_dir', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.data_dir.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.genesis_block', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.genesis_block.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.is_validator', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.is_validator.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.key_pair', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.key_pair.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.max_listeners', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.max_listeners.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.max_retries', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.max_retries.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.min_listeners', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.min_listeners.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.port', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.port.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.retry_delay', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.retry_delay.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.timeout', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.timeout.html', attributes: []},
{name: 'agora.common.Config.NodeConfig.validator_cycle', kind: "variabledeclaration", path: './agora/common/Config/NodeConfig.validator_cycle.html', attributes: []},
{name: 'agora.common.Config.parseCommandLine', kind: "functiondeclaration", path: './agora/common/Config/parseCommandLine.html', attributes: []},
{name: 'agora.common.Config.parseConfigFile', kind: "functiondeclaration", path: './agora/common/Config/parseConfigFile.html', attributes: []},
{name: 'agora.common.Config.parseConfigString', kind: "functiondeclaration", path: './agora/common/Config/parseConfigString.html', attributes: []},
{name: 'agora.common.Config.toQuorumConfig', kind: "functiondeclaration", path: './agora/common/Config/toQuorumConfig.html', attributes: ["safe"]},
{name: 'agora.common.Config.toSCPQuorumSet', kind: "functiondeclaration", path: './agora/common/Config/toSCPQuorumSet.html', attributes: ["safe"]},
{name: 'agora.common.Hash', kind: "module", path: './agora/common/Hash.html', attributes: []},
{name: 'agora.common.Hash.Hash', kind: "aliasdeclaration", path: './agora/common/Hash/Hash.html', attributes: []},
{name: 'agora.common.Hash.HashDg', kind: "aliasdeclaration", path: './agora/common/Hash/HashDg.html', attributes: []},
{name: 'agora.common.Hash.hashFull', kind: "functiondeclaration", path: './agora/common/Hash/hashFull.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'agora.common.Hash.hashMulti', kind: "functiondeclaration", path: './agora/common/Hash/hashMulti.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'agora.common.Hash.hashPart', kind: "functiondeclaration", path: './agora/common/Hash/hashPart.html', attributes: ["nothrow", "nogc"]},
{name: 'agora.common.Hash.Signature', kind: "aliasdeclaration", path: './agora/common/Hash/Signature.html', attributes: []},
{name: 'agora.common.ManagedDatabase', kind: "module", path: './agora/common/ManagedDatabase.html', attributes: []},
{name: 'agora.common.ManagedDatabase.ManagedDatabase', kind: "classdeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.html', attributes: []},
{name: 'agora.common.ManagedDatabase.ManagedDatabase.beginBatch', kind: "functiondeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.beginBatch.html', attributes: ["static", "nothrow", "trusted"]},
{name: 'agora.common.ManagedDatabase.ManagedDatabase.commitBatch', kind: "functiondeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.commitBatch.html', attributes: ["static", "nothrow", "trusted"]},
{name: 'agora.common.ManagedDatabase.ManagedDatabase.getDatabase', kind: "functiondeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.getDatabase.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.common.ManagedDatabase.ManagedDatabase.rollback', kind: "functiondeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.rollback.html', attributes: ["static", "nothrow", "trusted"]},
{name: 'agora.common.ManagedDatabase.ManagedDatabase.this', kind: "functiondeclaration", path: './agora/common/ManagedDatabase/ManagedDatabase.this.html', attributes: []},
{name: 'agora.common.Metadata', kind: "module", path: './agora/common/Metadata.html', attributes: []},
{name: 'agora.common.Metadata.DiskMetadata', kind: "classdeclaration", path: './agora/common/Metadata/DiskMetadata.html', attributes: []},
{name: 'agora.common.Metadata.DiskMetadata.dump', kind: "functiondeclaration", path: './agora/common/Metadata/DiskMetadata.dump.html', attributes: ["override"]},
{name: 'agora.common.Metadata.DiskMetadata.load', kind: "functiondeclaration", path: './agora/common/Metadata/DiskMetadata.load.html', attributes: ["override"]},
{name: 'agora.common.Metadata.DiskMetadata.this', kind: "functiondeclaration", path: './agora/common/Metadata/DiskMetadata.this.html', attributes: []},
{name: 'agora.common.Metadata.Metadata.peers', kind: "variabledeclaration", path: './agora/common/Metadata/Metadata.peers.html', attributes: []},
{name: 'agora.common.Metadata.MemMetadata', kind: "classdeclaration", path: './agora/common/Metadata/MemMetadata.html', attributes: []},
{name: 'agora.common.Metadata.MemMetadata.dump', kind: "functiondeclaration", path: './agora/common/Metadata/MemMetadata.dump.html', attributes: ["override"]},
{name: 'agora.common.Metadata.MemMetadata.load', kind: "functiondeclaration", path: './agora/common/Metadata/MemMetadata.load.html', attributes: ["override"]},
{name: 'agora.common.Metadata.MemMetadata.this', kind: "functiondeclaration", path: './agora/common/Metadata/MemMetadata.this.html', attributes: []},
{name: 'agora.common.Metadata.Metadata', kind: "classdeclaration", path: './agora/common/Metadata/Metadata.html', attributes: []},
{name: 'agora.common.Metadata.Metadata.dump', kind: "functiondeclaration", path: './agora/common/Metadata/Metadata.dump.html', attributes: []},
{name: 'agora.common.Metadata.Metadata.load', kind: "functiondeclaration", path: './agora/common/Metadata/Metadata.load.html', attributes: []},
{name: 'agora.common.SCPHash', kind: "module", path: './agora/common/SCPHash.html', attributes: []},
{name: 'agora.common.SCPHash.getHashOf', kind: "functiondeclaration", path: './agora/common/SCPHash/getHashOf.html', attributes: ["extern(C++)"]},
{name: 'agora.common.Serializer', kind: "module", path: './agora/common/Serializer.html', attributes: []},
{name: 'agora.common.Serializer.DefaultMaxLength', kind: "enummemberdeclaration", path: './agora/common/Serializer/DefaultMaxLength.html', attributes: []},
{name: 'agora.common.Serializer.DeserializeDg', kind: "aliasdeclaration", path: './agora/common/Serializer/DeserializeDg.html', attributes: []},
{name: 'agora.common.Serializer.deserializeFull', kind: "functiondeclaration", path: './agora/common/Serializer/deserializeFull.html', attributes: ["safe"]},
{name: 'agora.common.Serializer.deserializeLength', kind: "functiondeclaration", path: './agora/common/Serializer/deserializeLength.html', attributes: ["safe"]},
{name: 'agora.common.Serializer.DeserializerOptions', kind: "structdeclaration", path: './agora/common/Serializer/DeserializerOptions.html', attributes: []},
{name: 'agora.common.Serializer.DeserializerOptions.compact', kind: "variabledeclaration", path: './agora/common/Serializer/DeserializerOptions.compact.html', attributes: []},
{name: 'agora.common.Serializer.DeserializerOptions.Default', kind: "variabledeclaration", path: './agora/common/Serializer/DeserializerOptions.Default.html', attributes: []},
{name: 'agora.common.Serializer.DeserializerOptions.maxLength', kind: "variabledeclaration", path: './agora/common/Serializer/DeserializerOptions.maxLength.html', attributes: []},
{name: 'agora.common.Serializer.SerializeDg', kind: "aliasdeclaration", path: './agora/common/Serializer/SerializeDg.html', attributes: []},
{name: 'agora.common.Serializer.serializeFull', kind: "functiondeclaration", path: './agora/common/Serializer/serializeFull.html', attributes: ["safe"]},
{name: 'agora.common.Serializer.serializePart', kind: "functiondeclaration", path: './agora/common/Serializer/serializePart.html', attributes: ["safe"]},
{name: 'agora.common.Serializer.serializeToBuffer', kind: "functiondeclaration", path: './agora/common/Serializer/serializeToBuffer.html', attributes: ["safe"]},
{name: 'agora.common.Set', kind: "module", path: './agora/common/Set.html', attributes: []},
{name: 'agora.common.Set.pickRandom', kind: "functiondeclaration", path: './agora/common/Set/pickRandom.html', attributes: []},
{name: 'agora.common.Set.Set', kind: "structdeclaration", path: './agora/common/Set/Set.html', attributes: []},
{name: 'agora.common.Set.Set._set', kind: "variabledeclaration", path: './agora/common/Set/Set._set.html', attributes: []},
{name: 'agora.common.Set.Set.fill', kind: "functiondeclaration", path: './agora/common/Set/Set.fill.html', attributes: []},
{name: 'agora.common.Set.Set.from', kind: "functiondeclaration", path: './agora/common/Set/Set.from.html', attributes: []},
{name: 'agora.common.Set.Set.fromBinary', kind: "functiondeclaration", path: './agora/common/Set/Set.fromBinary.html', attributes: ["safe"]},
{name: 'agora.common.Set.Set.opApply', kind: "functiondeclaration", path: './agora/common/Set/Set.opApply.html', attributes: []},
{name: 'agora.common.Set.Set.put', kind: "functiondeclaration", path: './agora/common/Set/Set.put.html', attributes: []},
{name: 'agora.common.Set.Set.remove', kind: "functiondeclaration", path: './agora/common/Set/Set.remove.html', attributes: []},
{name: 'agora.common.Set.Set.serialize', kind: "functiondeclaration", path: './agora/common/Set/Set.serialize.html', attributes: ["const", "safe"]},
{name: 'agora.common.Task', kind: "module", path: './agora/common/Task.html', attributes: []},
{name: 'agora.common.Task.ITimer', kind: "interfacedeclaration", path: './agora/common/Task/ITimer.html', attributes: []},
{name: 'agora.common.Task.ITimer.stop', kind: "functiondeclaration", path: './agora/common/Task/ITimer.stop.html', attributes: ["abstract"]},
{name: 'agora.common.Task.Periodic', kind: "enumdeclaration", path: './agora/common/Task/Periodic.html', attributes: []},
{name: 'agora.common.Task.TaskManager', kind: "classdeclaration", path: './agora/common/Task/TaskManager.html', attributes: []},
{name: 'agora.common.Task.TaskManager.runTask', kind: "functiondeclaration", path: './agora/common/Task/TaskManager.runTask.html', attributes: []},
{name: 'agora.common.Task.TaskManager.setTimer', kind: "functiondeclaration", path: './agora/common/Task/TaskManager.setTimer.html', attributes: []},
{name: 'agora.common.Task.TaskManager.wait', kind: "functiondeclaration", path: './agora/common/Task/TaskManager.wait.html', attributes: []},
{name: 'agora.common.TransactionPool', kind: "module", path: './agora/common/TransactionPool.html', attributes: []},
{name: 'agora.common.TransactionPool.TransactionPool', kind: "classdeclaration", path: './agora/common/TransactionPool/TransactionPool.html', attributes: []},
{name: 'agora.common.TransactionPool.TransactionPool.add', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.add.html', attributes: ["safe"]},
{name: 'agora.common.TransactionPool.TransactionPool.hasTransactionHash', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.hasTransactionHash.html', attributes: ["trusted"]},
{name: 'agora.common.TransactionPool.TransactionPool.initialize', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.initialize.html', attributes: ["static"]},
{name: 'agora.common.TransactionPool.TransactionPool.length', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.length.html', attributes: ["safe"]},
{name: 'agora.common.TransactionPool.TransactionPool.opApply', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.opApply.html', attributes: ["trusted"]},
{name: 'agora.common.TransactionPool.TransactionPool.remove', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.remove.html', attributes: ["trusted"]},
{name: 'agora.common.TransactionPool.TransactionPool.this', kind: "functiondeclaration", path: './agora/common/TransactionPool/TransactionPool.this.html', attributes: []},
{name: 'agora.common.Types', kind: "module", path: './agora/common/Types.html', attributes: []},
{name: 'agora.common.Types.Address', kind: "aliasdeclaration", path: './agora/common/Types/Address.html', attributes: []},
{name: 'agora.common.Types.CompactMode', kind: "enumdeclaration", path: './agora/common/Types/CompactMode.html', attributes: []},
{name: 'agora.common.Types.cstring', kind: "aliasdeclaration", path: './agora/common/Types/cstring.html', attributes: []},
{name: 'agora.common.Types.Hash', kind: "aliasdeclaration", path: './agora/common/Types/Hash.html', attributes: []},
{name: 'agora.common.Types.Height', kind: "structdeclaration", path: './agora/common/Types/Height.html', attributes: []},
{name: 'agora.common.Types.Height.value', kind: "variabledeclaration", path: './agora/common/Types/Height.value.html', attributes: []},
{name: 'agora.common.Types.QuorumConfig', kind: "structdeclaration", path: './agora/common/Types/QuorumConfig.html', attributes: []},
{name: 'agora.common.Types.QuorumConfig.nodes', kind: "variabledeclaration", path: './agora/common/Types/QuorumConfig.nodes.html', attributes: []},
{name: 'agora.common.Types.QuorumConfig.quorums', kind: "variabledeclaration", path: './agora/common/Types/QuorumConfig.quorums.html', attributes: []},
{name: 'agora.common.Types.QuorumConfig.threshold', kind: "variabledeclaration", path: './agora/common/Types/QuorumConfig.threshold.html', attributes: []},
{name: 'agora.common.Types.Signature', kind: "aliasdeclaration", path: './agora/common/Types/Signature.html', attributes: []},
{name: 'agora.consensus.data.Block', kind: "module", path: './agora/consensus/data/Block.html', attributes: []},
{name: 'agora.consensus.data.Block.Block', kind: "structdeclaration", path: './agora/consensus/data/Block/Block.html', attributes: []},
{name: 'agora.consensus.data.Block.Block.buildMerkleTree', kind: "functiondeclaration", path: './agora/consensus/data/Block/Block.buildMerkleTree.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.data.Block.Block.checkMerklePath', kind: "functiondeclaration", path: './agora/consensus/data/Block/Block.checkMerklePath.html', attributes: ["static", "safe"]},
{name: 'agora.consensus.data.Block.Block.findHashIndex', kind: "functiondeclaration", path: './agora/consensus/data/Block/Block.findHashIndex.html', attributes: ["nothrow", "safe", "const"]},
{name: 'agora.consensus.data.Block.Block.getMerklePath', kind: "functiondeclaration", path: './agora/consensus/data/Block/Block.getMerklePath.html', attributes: ["nothrow", "safe", "const"]},
{name: 'agora.consensus.data.Block.Block.header', kind: "variabledeclaration", path: './agora/consensus/data/Block/Block.header.html', attributes: []},
{name: 'agora.consensus.data.Block.Block.merkle_tree', kind: "variabledeclaration", path: './agora/consensus/data/Block/Block.merkle_tree.html', attributes: []},
{name: 'agora.consensus.data.Block.Block.serialize', kind: "functiondeclaration", path: './agora/consensus/data/Block/Block.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.consensus.data.Block.Block.txs', kind: "variabledeclaration", path: './agora/consensus/data/Block/Block.txs.html', attributes: []},
{name: 'agora.consensus.data.Block.Block.TxsInBlock', kind: "enummemberdeclaration", path: './agora/consensus/data/Block/Block.TxsInBlock.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader', kind: "structdeclaration", path: './agora/consensus/data/Block/BlockHeader.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.computeHash', kind: "functiondeclaration", path: './agora/consensus/data/Block/BlockHeader.computeHash.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.data.Block.BlockHeader.enrollments', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.enrollments.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.height', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.height.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.merkle_root', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.merkle_root.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.prev_block', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.prev_block.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.serialize', kind: "functiondeclaration", path: './agora/consensus/data/Block/BlockHeader.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.consensus.data.Block.BlockHeader.signature', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.signature.html', attributes: []},
{name: 'agora.consensus.data.Block.BlockHeader.validators', kind: "variabledeclaration", path: './agora/consensus/data/Block/BlockHeader.validators.html', attributes: []},
{name: 'agora.consensus.data.Block.makeNewBlock', kind: "functiondeclaration", path: './agora/consensus/data/Block/makeNewBlock.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.data.ConsensusData', kind: "module", path: './agora/consensus/data/ConsensusData.html', attributes: []},
{name: 'agora.consensus.data.ConsensusData.ConsensusData', kind: "structdeclaration", path: './agora/consensus/data/ConsensusData/ConsensusData.html', attributes: []},
{name: 'agora.consensus.data.ConsensusData.ConsensusData.enrolls', kind: "variabledeclaration", path: './agora/consensus/data/ConsensusData/ConsensusData.enrolls.html', attributes: []},
{name: 'agora.consensus.data.ConsensusData.ConsensusData.tx_set', kind: "variabledeclaration", path: './agora/consensus/data/ConsensusData/ConsensusData.tx_set.html', attributes: []},
{name: 'agora.consensus.data.ConsensusParams', kind: "module", path: './agora/consensus/data/ConsensusParams.html', attributes: []},
{name: 'agora.consensus.data.ConsensusParams.ConsensusParams', kind: "classdeclaration", path: './agora/consensus/data/ConsensusParams/ConsensusParams.html', attributes: []},
{name: 'agora.consensus.data.ConsensusParams.ConsensusParams.this', kind: "functiondeclaration", path: './agora/consensus/data/ConsensusParams/ConsensusParams.this.html', attributes: ["immutable"]},
{name: 'agora.consensus.data.ConsensusParams.ConsensusParams.ValidatorCycle', kind: "variabledeclaration", path: './agora/consensus/data/ConsensusParams/ConsensusParams.ValidatorCycle.html', attributes: []},
{name: 'agora.consensus.data.Enrollment', kind: "module", path: './agora/consensus/data/Enrollment.html', attributes: []},
{name: 'agora.consensus.data.Enrollment.Enrollment', kind: "structdeclaration", path: './agora/consensus/data/Enrollment/Enrollment.html', attributes: []},
{name: 'agora.consensus.data.Enrollment.Enrollment.computeHash', kind: "functiondeclaration", path: './agora/consensus/data/Enrollment/Enrollment.computeHash.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.data.Enrollment.Enrollment.cycle_length', kind: "variabledeclaration", path: './agora/consensus/data/Enrollment/Enrollment.cycle_length.html', attributes: []},
{name: 'agora.consensus.data.Enrollment.Enrollment.enroll_sig', kind: "variabledeclaration", path: './agora/consensus/data/Enrollment/Enrollment.enroll_sig.html', attributes: []},
{name: 'agora.consensus.data.Enrollment.Enrollment.random_seed', kind: "variabledeclaration", path: './agora/consensus/data/Enrollment/Enrollment.random_seed.html', attributes: []},
{name: 'agora.consensus.data.Enrollment.Enrollment.utxo_key', kind: "variabledeclaration", path: './agora/consensus/data/Enrollment/Enrollment.utxo_key.html', attributes: []},
{name: 'agora.consensus.data.PreImageInfo', kind: "module", path: './agora/consensus/data/PreImageInfo.html', attributes: []},
{name: 'agora.consensus.data.PreImageInfo.PreImageInfo', kind: "structdeclaration", path: './agora/consensus/data/PreImageInfo/PreImageInfo.html', attributes: []},
{name: 'agora.consensus.data.PreImageInfo.PreImageInfo.distance', kind: "variabledeclaration", path: './agora/consensus/data/PreImageInfo/PreImageInfo.distance.html', attributes: []},
{name: 'agora.consensus.data.PreImageInfo.PreImageInfo.enroll_key', kind: "variabledeclaration", path: './agora/consensus/data/PreImageInfo/PreImageInfo.enroll_key.html', attributes: []},
{name: 'agora.consensus.data.PreImageInfo.PreImageInfo.hash', kind: "variabledeclaration", path: './agora/consensus/data/PreImageInfo/PreImageInfo.hash.html', attributes: []},
{name: 'agora.consensus.data.Transaction', kind: "module", path: './agora/consensus/data/Transaction.html', attributes: []},
{name: 'agora.consensus.data.Transaction.getSumOutput', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/getSumOutput.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.consensus.data.Transaction.Input', kind: "structdeclaration", path: './agora/consensus/data/Transaction/Input.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Input.computeHash', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/Input.computeHash.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.data.Transaction.Input.index', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Input.index.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Input.previous', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Input.previous.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Input.signature', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Input.signature.html', attributes: []},
{name: 'agora.consensus.data.Transaction.isCoinbaseTx', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/isCoinbaseTx.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.consensus.data.Transaction.newCoinbaseTX', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/newCoinbaseTX.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Output', kind: "structdeclaration", path: './agora/consensus/data/Transaction/Output.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Output.address', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Output.address.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Output.value', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Output.value.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Transaction', kind: "structdeclaration", path: './agora/consensus/data/Transaction/Transaction.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Transaction.inputs', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Transaction.inputs.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Transaction.opCmp', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/Transaction.opCmp.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.data.Transaction.Transaction.outputs', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Transaction.outputs.html', attributes: []},
{name: 'agora.consensus.data.Transaction.Transaction.serialize', kind: "functiondeclaration", path: './agora/consensus/data/Transaction/Transaction.serialize.html', attributes: ["safe", "const"]},
{name: 'agora.consensus.data.Transaction.Transaction.type', kind: "variabledeclaration", path: './agora/consensus/data/Transaction/Transaction.type.html', attributes: []},
{name: 'agora.consensus.data.Transaction.TxType', kind: "enumdeclaration", path: './agora/consensus/data/Transaction/TxType.html', attributes: []},
{name: 'agora.consensus.data.UTXOSetValue', kind: "module", path: './agora/consensus/data/UTXOSetValue.html', attributes: []},
{name: 'agora.consensus.data.UTXOSetValue.UTXOFinder', kind: "aliasdeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOFinder.html', attributes: ["scope"]},
{name: 'agora.consensus.data.UTXOSetValue.UTXOSetValue', kind: "structdeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOSetValue.html', attributes: []},
{name: 'agora.consensus.data.UTXOSetValue.UTXOSetValue.getHash', kind: "functiondeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOSetValue.getHash.html', attributes: ["static", "nothrow", "safe"]},
{name: 'agora.consensus.data.UTXOSetValue.UTXOSetValue.output', kind: "variabledeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOSetValue.output.html', attributes: []},
{name: 'agora.consensus.data.UTXOSetValue.UTXOSetValue.type', kind: "variabledeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOSetValue.type.html', attributes: []},
{name: 'agora.consensus.data.UTXOSetValue.UTXOSetValue.unlock_height', kind: "variabledeclaration", path: './agora/consensus/data/UTXOSetValue/UTXOSetValue.unlock_height.html', attributes: []},
{name: 'agora.consensus.protocol.Nominator', kind: "module", path: './agora/consensus/protocol/Nominator.html', attributes: []},
{name: 'agora.consensus.protocol.Nominator.Nominator', kind: "classdeclaration", path: './agora/consensus/protocol/Nominator/Nominator.html', attributes: []},
{name: 'agora.consensus.protocol.Nominator.Nominator.combineCandidates', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.combineCandidates.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.emitEnvelope', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.emitEnvelope.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.getQSet', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.getQSet.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.isNominating', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.isNominating.html', attributes: ["nothrow", "nogc", "safe"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.receiveEnvelope', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.receiveEnvelope.html', attributes: ["trusted"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.setQuorumConfig', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.setQuorumConfig.html', attributes: []},
{name: 'agora.consensus.protocol.Nominator.Nominator.setupTimer', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.setupTimer.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.signEnvelope', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.signEnvelope.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.this', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.this.html', attributes: []},
{name: 'agora.consensus.protocol.Nominator.Nominator.tryNominate', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.tryNominate.html', attributes: ["safe"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.validateValue', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.validateValue.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.valueExternalized', kind: "functiondeclaration", path: './agora/consensus/protocol/Nominator/Nominator.valueExternalized.html', attributes: ["override", "extern(C++)"]},
{name: 'agora.consensus.protocol.Nominator.Nominator.scp', kind: "variabledeclaration", path: './agora/consensus/protocol/Nominator/Nominator.scp.html', attributes: []},
{name: 'agora.consensus.validation.Block', kind: "module", path: './agora/consensus/validation/Block.html', attributes: []},
{name: 'agora.consensus.validation.Block.isGenesisBlockInvalidReason', kind: "functiondeclaration", path: './agora/consensus/validation/Block/isGenesisBlockInvalidReason.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.validation.Block.isInvalidReason', kind: "functiondeclaration", path: './agora/consensus/validation/Block/isInvalidReason.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.validation.Enrollment', kind: "module", path: './agora/consensus/validation/Enrollment.html', attributes: []},
{name: 'agora.consensus.validation.Enrollment.isInvalidReason', kind: "functiondeclaration", path: './agora/consensus/validation/Enrollment/isInvalidReason.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.validation.PreImage', kind: "module", path: './agora/consensus/validation/PreImage.html', attributes: []},
{name: 'agora.consensus.validation.PreImage.isInvalidReason', kind: "functiondeclaration", path: './agora/consensus/validation/PreImage/isInvalidReason.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.validation.Transaction', kind: "module", path: './agora/consensus/validation/Transaction.html', attributes: []},
{name: 'agora.consensus.validation.Transaction.isInvalidReason', kind: "functiondeclaration", path: './agora/consensus/validation/Transaction/isInvalidReason.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager', kind: "module", path: './agora/consensus/EnrollmentManager.html', attributes: []},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager', kind: "classdeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.html', attributes: []},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.addPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.addPreimage.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.addValidator', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.addValidator.html', attributes: ["safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.clearExpiredValidators', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.clearExpiredValidators.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.createEnrollment', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.createEnrollment.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getEnrolledHeight', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getEnrolledHeight.html', attributes: ["trusted"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getEnrolledUTXOs', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getEnrolledUTXOs.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getEnrollmentPublicKey', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getEnrollmentPublicKey.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getNextPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getNextPreimage.html', attributes: ["safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getPreimage.html', attributes: ["safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getValidatorCount', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getValidatorCount.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.getValidatorPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.getValidatorPreimage.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.hasPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.hasPreimage.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.increaseNextRevealHeight', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.increaseNextRevealHeight.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.needRevealPreimage', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.needRevealPreimage.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.pool', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.pool.html', attributes: ["pure", "nothrow", "nogc", "safe", "inout"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.PreimageRevealPeriod', kind: "variabledeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.PreimageRevealPeriod.html', attributes: []},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.restoreValidators', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.restoreValidators.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.this', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.this.html', attributes: []},
{name: 'agora.consensus.EnrollmentManager.EnrollmentManager.validatorCount', kind: "functiondeclaration", path: './agora/consensus/EnrollmentManager/EnrollmentManager.validatorCount.html', attributes: ["safe"]},
{name: 'agora.consensus.EnrollmentPool', kind: "module", path: './agora/consensus/EnrollmentPool.html', attributes: []},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool', kind: "classdeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.html', attributes: []},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.add', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.add.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.count', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.count.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.getEnrollment', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.getEnrollment.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.getEnrollments', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.getEnrollments.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.hasEnrollment', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.hasEnrollment.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.remove', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.remove.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.EnrollmentPool.EnrollmentPool.this', kind: "functiondeclaration", path: './agora/consensus/EnrollmentPool/EnrollmentPool.this.html', attributes: []},
{name: 'agora.consensus.Genesis', kind: "module", path: './agora/consensus/Genesis.html', attributes: []},
{name: 'agora.consensus.Genesis.GenesisBlock', kind: "functiondeclaration", path: './agora/consensus/Genesis/GenesisBlock.html', attributes: ["nothrow", "ref", "nogc", "safe"]},
{name: 'agora.consensus.Genesis.GenesisTransaction', kind: "functiondeclaration", path: './agora/consensus/Genesis/GenesisTransaction.html', attributes: ["nothrow", "ref", "nogc", "safe"]},
{name: 'agora.consensus.Genesis.setGenesisBlock', kind: "functiondeclaration", path: './agora/consensus/Genesis/setGenesisBlock.html', attributes: ["safe"]},
{name: 'agora.consensus.PreImage', kind: "module", path: './agora/consensus/PreImage.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache', kind: "structdeclaration", path: './agora/consensus/PreImage/PreImageCache.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.byStride', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.byStride.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.PreImage.PreImageCache.length', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.length.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.PreImage.PreImageCache.opDollar', kind: "aliasdeclaration", path: './agora/consensus/PreImage/PreImageCache.opDollar.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.opIndex', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.opIndex.html', attributes: ["nothrow", "nogc", "safe", "const"]},
{name: 'agora.consensus.PreImage.PreImageCache.PrintMode', kind: "enumdeclaration", path: './agora/consensus/PreImage/PreImageCache.PrintMode.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.PrintMode.All', kind: "enummemberdeclaration", path: './agora/consensus/PreImage/PreImageCache.PrintMode.html#All', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.PrintMode.Bounds', kind: "enummemberdeclaration", path: './agora/consensus/PreImage/PreImageCache.PrintMode.html#Bounds', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.PrintMode.Stride', kind: "enummemberdeclaration", path: './agora/consensus/PreImage/PreImageCache.PrintMode.html#Stride', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCache.reset', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.reset.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.PreImage.PreImageCache.this', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.this.html', attributes: ["disable", "nothrow", "ref", "safe"]},
{name: 'agora.consensus.PreImage.PreImageCache.toString', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCache.toString.html', attributes: ["safe", "const"]},
{name: 'agora.consensus.PreImage.PreImageCycle', kind: "structdeclaration", path: './agora/consensus/PreImage/PreImageCycle.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.consume', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCycle.consume.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.PreImage.PreImageCycle.index', kind: "variabledeclaration", path: './agora/consensus/PreImage/PreImageCycle.index.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.nonce', kind: "variabledeclaration", path: './agora/consensus/PreImage/PreImageCycle.nonce.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.NumberOfCycles', kind: "variabledeclaration", path: './agora/consensus/PreImage/PreImageCycle.NumberOfCycles.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.preimages', kind: "variabledeclaration", path: './agora/consensus/PreImage/PreImageCycle.preimages.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.seeds', kind: "variabledeclaration", path: './agora/consensus/PreImage/PreImageCycle.seeds.html', attributes: []},
{name: 'agora.consensus.PreImage.PreImageCycle.this', kind: "functiondeclaration", path: './agora/consensus/PreImage/PreImageCycle.this.html', attributes: ["disable"]},
{name: 'agora.consensus.Quorum', kind: "module", path: './agora/consensus/Quorum.html', attributes: []},
{name: 'agora.consensus.Quorum.buildQuorumConfig', kind: "functiondeclaration", path: './agora/consensus/Quorum/buildQuorumConfig.html', attributes: []},
{name: 'agora.consensus.UTXOSet', kind: "module", path: './agora/consensus/UTXOSet.html', attributes: []},
{name: 'agora.consensus.UTXOSet.UTXOSet', kind: "classdeclaration", path: './agora/consensus/UTXOSet/UTXOSet.html', attributes: []},
{name: 'agora.consensus.UTXOSet.UTXOSet.getUTXOFinder', kind: "functiondeclaration", path: './agora/consensus/UTXOSet/UTXOSet.getUTXOFinder.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.UTXOSet.UTXOSet.getUTXOs', kind: "functiondeclaration", path: './agora/consensus/UTXOSet/UTXOSet.getUTXOs.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.UTXOSet.UTXOSet.length', kind: "functiondeclaration", path: './agora/consensus/UTXOSet/UTXOSet.length.html', attributes: ["safe"]},
{name: 'agora.consensus.UTXOSet.UTXOSet.this', kind: "functiondeclaration", path: './agora/consensus/UTXOSet/UTXOSet.this.html', attributes: []},
{name: 'agora.consensus.UTXOSet.UTXOSet.updateUTXOCache', kind: "functiondeclaration", path: './agora/consensus/UTXOSet/UTXOSet.updateUTXOCache.html', attributes: ["safe"]},
{name: 'agora.consensus.validation', kind: "module", path: './agora/consensus/validation.html', attributes: []},
{name: 'agora.consensus.ValidatorSet', kind: "module", path: './agora/consensus/ValidatorSet.html', attributes: []},
{name: 'agora.consensus.ValidatorSet.ValidatorSet', kind: "classdeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.html', attributes: []},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.add', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.add.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.addPreimage', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.addPreimage.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.clearExpiredValidators', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.clearExpiredValidators.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.count', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.count.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.getEnrolledHeight', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.getEnrolledHeight.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.getEnrolledUTXOs', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.getEnrolledUTXOs.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.getPreimage', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.getPreimage.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.getValidatorCount', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.getValidatorCount.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.hasEnrollment', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.hasEnrollment.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.hasPreimage', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.hasPreimage.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.remove', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.remove.html', attributes: ["nothrow", "trusted"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.restoreValidators', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.restoreValidators.html', attributes: ["nothrow", "safe"]},
{name: 'agora.consensus.ValidatorSet.ValidatorSet.this', kind: "functiondeclaration", path: './agora/consensus/ValidatorSet/ValidatorSet.this.html', attributes: []},
{name: 'agora.network.NetworkClient', kind: "module", path: './agora/network/NetworkClient.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient', kind: "classdeclaration", path: './agora/network/NetworkClient/NetworkClient.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.address', kind: "variabledeclaration", path: './agora/network/NetworkClient/NetworkClient.address.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.getBlockHeight', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.getBlockHeight.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.getBlocksFrom', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.getBlocksFrom.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.getNodeInfo', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.getNodeInfo.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.getPublicKey', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.getPublicKey.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.registerListener', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.registerListener.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.sendEnrollment', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.sendEnrollment.html', attributes: ["trusted"]},
{name: 'agora.network.NetworkClient.NetworkClient.sendEnvelope', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.sendEnvelope.html', attributes: []},
{name: 'agora.network.NetworkClient.NetworkClient.sendPreimage', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.sendPreimage.html', attributes: ["trusted"]},
{name: 'agora.network.NetworkClient.NetworkClient.sendTransaction', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.sendTransaction.html', attributes: ["trusted"]},
{name: 'agora.network.NetworkClient.NetworkClient.this', kind: "functiondeclaration", path: './agora/network/NetworkClient/NetworkClient.this.html', attributes: []},
{name: 'agora.network.NetworkManager', kind: "module", path: './agora/network/NetworkManager.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager', kind: "classdeclaration", path: './agora/network/NetworkManager/NetworkManager.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.discover', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.discover.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.dumpMetadata', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.dumpMetadata.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.getNetworkInfo', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.getNetworkInfo.html', attributes: ["pure", "nothrow", "nogc", "safe"]},
{name: 'agora.network.NetworkManager.NetworkManager.gossipEnvelope', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.gossipEnvelope.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.gossipTransaction', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.gossipTransaction.html', attributes: ["safe"]},
{name: 'agora.network.NetworkManager.NetworkManager.registerListener', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.registerListener.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.sendEnrollment', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.sendEnrollment.html', attributes: ["safe"]},
{name: 'agora.network.NetworkManager.NetworkManager.sendPreimage', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.sendPreimage.html', attributes: ["safe"]},
{name: 'agora.network.NetworkManager.NetworkManager.startPeriodicCatchup', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.startPeriodicCatchup.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.this', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.this.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.banman', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.banman.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.connection_tasks', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.connection_tasks.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.discovery_task', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.discovery_task.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.getAddress', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.getAddress.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.getBanManager', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.getBanManager.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.getClient', kind: "functiondeclaration", path: './agora/network/NetworkManager/NetworkManager.getClient.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.known_addresses', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.known_addresses.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.node_config', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.node_config.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.peers', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.peers.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.todo_addresses', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.todo_addresses.html', attributes: []},
{name: 'agora.network.NetworkManager.NetworkManager.validator_to_addr', kind: "variabledeclaration", path: './agora/network/NetworkManager/NetworkManager.validator_to_addr.html', attributes: []},
{name: 'agora.node.BlockStorage', kind: "module", path: './agora/node/BlockStorage.html', attributes: []},
{name: 'agora.node.BlockStorage.BlockStorage', kind: "classdeclaration", path: './agora/node/BlockStorage/BlockStorage.html', attributes: []},
{name: 'agora.node.BlockStorage.BlockStorage.load', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.load.html', attributes: ["override", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.BlockStorage.readLastBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.readLastBlock.html', attributes: ["override", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.BlockStorage.release', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.release.html', attributes: ["trusted"]},
{name: 'agora.node.BlockStorage.BlockStorage.removeIndexFile', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.removeIndexFile.html', attributes: ["static"]},
{name: 'agora.node.BlockStorage.BlockStorage.saveBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.saveBlock.html', attributes: ["override", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.BlockStorage.this', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.this.html', attributes: ["pure", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.BlockStorage.tryReadBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/BlockStorage.tryReadBlock.html', attributes: ["override", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.IBlockStorage.load', kind: "functiondeclaration", path: './agora/node/BlockStorage/IBlockStorage.load.html', attributes: ["abstract", "safe"]},
{name: 'agora.node.BlockStorage.IBlockStorage.readBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/IBlockStorage.readBlock.html', attributes: ["final", "abstract", "safe"]},
{name: 'agora.node.BlockStorage.IBlockStorage.readLastBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/IBlockStorage.readLastBlock.html', attributes: ["abstract", "safe"]},
{name: 'agora.node.BlockStorage.IBlockStorage.saveBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/IBlockStorage.saveBlock.html', attributes: ["abstract", "safe"]},
{name: 'agora.node.BlockStorage.ChecksumSize', kind: "variabledeclaration", path: './agora/node/BlockStorage/ChecksumSize.html', attributes: []},
{name: 'agora.node.BlockStorage.IBlockStorage', kind: "interfacedeclaration", path: './agora/node/BlockStorage/IBlockStorage.html', attributes: []},
{name: 'agora.node.BlockStorage.IBlockStorage.tryReadBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/IBlockStorage.tryReadBlock.html', attributes: ["abstract", "nothrow", "safe"]},
{name: 'agora.node.BlockStorage.MemBlockStorage', kind: "classdeclaration", path: './agora/node/BlockStorage/MemBlockStorage.html', attributes: []},
{name: 'agora.node.BlockStorage.MemBlockStorage.load', kind: "functiondeclaration", path: './agora/node/BlockStorage/MemBlockStorage.load.html', attributes: ["override", "safe"]},
{name: 'agora.node.BlockStorage.MemBlockStorage.readLastBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/MemBlockStorage.readLastBlock.html', attributes: ["safe"]},
{name: 'agora.node.BlockStorage.MemBlockStorage.saveBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/MemBlockStorage.saveBlock.html', attributes: ["nothrow", "safe"]},
{name: 'agora.node.BlockStorage.MemBlockStorage.this', kind: "functiondeclaration", path: './agora/node/BlockStorage/MemBlockStorage.this.html', attributes: []},
{name: 'agora.node.BlockStorage.MemBlockStorage.tryReadBlock', kind: "functiondeclaration", path: './agora/node/BlockStorage/MemBlockStorage.tryReadBlock.html', attributes: ["nothrow", "safe"]},
{name: 'agora.node.FullNode', kind: "module", path: './agora/node/FullNode.html', attributes: []},
{name: 'agora.node.FullNode.FullNode', kind: "classdeclaration", path: './agora/node/FullNode/FullNode.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.enrollValidator', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.enrollValidator.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.getBlockHeight', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getBlockHeight.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.getBlocksFrom', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getBlocksFrom.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.getEnrollment', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getEnrollment.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.getMerklePath', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getMerklePath.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.getNodeInfo', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getNodeInfo.html', attributes: ["override", "pure", "nothrow", "nogc", "safe"]},
{name: 'agora.node.FullNode.FullNode.getPreimage', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getPreimage.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.hasTransactionHash', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.hasTransactionHash.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.putTransaction', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.putTransaction.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.receivePreimage', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.receivePreimage.html', attributes: ["override", "safe"]},
{name: 'agora.node.FullNode.FullNode.registerListener', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.registerListener.html', attributes: ["override", "trusted"]},
{name: 'agora.node.FullNode.FullNode.shutdown', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.shutdown.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.start', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.start.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.this', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.this.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.config', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.config.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.enroll_man', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.enroll_man.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.exception', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.exception.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getBlockStorage', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getBlockStorage.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getEnrollmentManager', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getEnrollmentManager.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getMetadata', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getMetadata.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getNetworkManager', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getNetworkManager.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getPool', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getPool.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getTaskManager', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getTaskManager.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.getUtxoSet', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.getUtxoSet.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.ledger', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.ledger.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.metadata', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.metadata.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.network', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.network.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.onAcceptedTransaction', kind: "functiondeclaration", path: './agora/node/FullNode/FullNode.onAcceptedTransaction.html', attributes: ["safe"]},
{name: 'agora.node.FullNode.FullNode.pool', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.pool.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.storage', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.storage.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.taskman', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.taskman.html', attributes: []},
{name: 'agora.node.FullNode.FullNode.utxo_set', kind: "variabledeclaration", path: './agora/node/FullNode/FullNode.utxo_set.html', attributes: []},
{name: 'agora.node.Ledger', kind: "module", path: './agora/node/Ledger.html', attributes: []},
{name: 'agora.node.Ledger.Ledger', kind: "classdeclaration", path: './agora/node/Ledger/Ledger.html', attributes: []},
{name: 'agora.node.Ledger.Ledger.acceptBlock', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.acceptBlock.html', attributes: ["safe"]},
{name: 'agora.node.Ledger.Ledger.acceptTransaction', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.acceptTransaction.html', attributes: ["safe"]},
{name: 'agora.node.Ledger.Ledger.getBlockHeight', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.getBlockHeight.html', attributes: ["nothrow", "safe"]},
{name: 'agora.node.Ledger.Ledger.getBlocksFrom', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.getBlocksFrom.html', attributes: ["auto", "nothrow", "safe"]},
{name: 'agora.node.Ledger.Ledger.getMerklePath', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.getMerklePath.html', attributes: ["nothrow", "safe"]},
{name: 'agora.node.Ledger.Ledger.hasTransactionHash', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.hasTransactionHash.html', attributes: ["safe"]},
{name: 'agora.node.Ledger.Ledger.onExternalized', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.onExternalized.html', attributes: ["trusted"]},
{name: 'agora.node.Ledger.Ledger.prepareNominatingSet', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.prepareNominatingSet.html', attributes: ["safe"]},
{name: 'agora.node.Ledger.Ledger.this', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.this.html', attributes: []},
{name: 'agora.node.Ledger.Ledger.validateBlock', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.validateBlock.html', attributes: ["nothrow", "safe"]},
{name: 'agora.node.Ledger.Ledger.validateConsensusData', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.validateConsensusData.html', attributes: ["trusted"]},
{name: 'agora.node.Ledger.Ledger.updateUTXOSet', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.updateUTXOSet.html', attributes: ["safe"]},
{name: 'agora.node.Ledger.Ledger.updateValidatorSet', kind: "functiondeclaration", path: './agora/node/Ledger/Ledger.updateValidatorSet.html', attributes: ["safe"]},
{name: 'agora.node.main', kind: "module", path: './agora/node/main.html', attributes: []},
{name: 'agora.node.main.rt_options', kind: "variabledeclaration", path: './agora/node/main/rt_options.html', attributes: []},
{name: 'agora.node.Runner', kind: "module", path: './agora/node/Runner.html', attributes: []},
{name: 'agora.node.Runner.runNode', kind: "functiondeclaration", path: './agora/node/Runner/runNode.html', attributes: []},
{name: 'agora.node.Validator', kind: "module", path: './agora/node/Validator.html', attributes: []},
{name: 'agora.node.Validator.Validator', kind: "classdeclaration", path: './agora/node/Validator/Validator.html', attributes: []},
{name: 'agora.node.Validator.Validator.getPublicKey', kind: "functiondeclaration", path: './agora/node/Validator/Validator.getPublicKey.html', attributes: ["override", "pure", "nothrow", "nogc", "safe"]},
{name: 'agora.node.Validator.Validator.receiveEnvelope', kind: "functiondeclaration", path: './agora/node/Validator/Validator.receiveEnvelope.html', attributes: ["override", "safe"]},
{name: 'agora.node.Validator.Validator.start', kind: "functiondeclaration", path: './agora/node/Validator/Validator.start.html', attributes: ["override"]},
{name: 'agora.node.Validator.Validator.this', kind: "functiondeclaration", path: './agora/node/Validator/Validator.this.html', attributes: []},
{name: 'agora.node.Validator.Validator.getNominator', kind: "functiondeclaration", path: './agora/node/Validator/Validator.getNominator.html', attributes: []},
{name: 'agora.node.Validator.Validator.nominator', kind: "variabledeclaration", path: './agora/node/Validator/Validator.nominator.html', attributes: []},
{name: 'agora.node.Validator.Validator.onAcceptedTransaction', kind: "functiondeclaration", path: './agora/node/Validator/Validator.onAcceptedTransaction.html', attributes: ["final", "override", "safe"]},
{name: 'agora.node.Validator.Validator.qc', kind: "variabledeclaration", path: './agora/node/Validator/Validator.qc.html', attributes: []},
{name: 'agora.node.Validator.Validator.required_peer_keys', kind: "variabledeclaration", path: './agora/node/Validator/Validator.required_peer_keys.html', attributes: []},
{name: 'agora.test.BanManager', kind: "module", path: './agora/test/BanManager.html', attributes: []},
{name: 'agora.test.Base', kind: "module", path: './agora/test/Base.html', attributes: []},
{name: 'agora.test.EnrollmentManager', kind: "module", path: './agora/test/EnrollmentManager.html', attributes: []},
{name: 'agora.test.GenesisBlock', kind: "module", path: './agora/test/GenesisBlock.html', attributes: []},
{name: 'agora.test.GossipProtocol', kind: "module", path: './agora/test/GossipProtocol.html', attributes: []},
{name: 'agora.test.Ledger', kind: "module", path: './agora/test/Ledger.html', attributes: []},
{name: 'agora.test.Metadata', kind: "module", path: './agora/test/Metadata.html', attributes: []},
{name: 'agora.test.NetworkClient', kind: "module", path: './agora/test/NetworkClient.html', attributes: []},
{name: 'agora.test.NetworkDiscovery', kind: "module", path: './agora/test/NetworkDiscovery.html', attributes: []},
{name: 'agora.test.NetworkManager', kind: "module", path: './agora/test/NetworkManager.html', attributes: []},
{name: 'agora.test.Quorum', kind: "module", path: './agora/test/Quorum.html', attributes: []},
{name: 'agora.test.Restart', kind: "module", path: './agora/test/Restart.html', attributes: []},
{name: 'agora.test.Simple', kind: "module", path: './agora/test/Simple.html', attributes: []},
{name: 'agora.utils.Log', kind: "module", path: './agora/utils/Log.html', attributes: []},
{name: 'agora.utils.Log.AddLogger', kind: "templatedeclaration", path: './agora/utils/Log/AddLogger.html', attributes: []},
{name: 'agora.utils.Log.AgoraLayout', kind: "classdeclaration", path: './agora/utils/Log/AgoraLayout.html', attributes: []},
{name: 'agora.utils.Log.AgoraLayout.format', kind: "functiondeclaration", path: './agora/utils/Log/AgoraLayout.format.html', attributes: ["override"]},
{name: 'agora.utils.Log.AgoraLayout.coloredName', kind: "functiondeclaration", path: './agora/utils/Log/AgoraLayout.coloredName.html', attributes: ["static"]},
{name: 'agora.utils.Log.CircularAppender', kind: "classdeclaration", path: './agora/utils/Log/CircularAppender.html', attributes: []},
{name: 'agora.utils.Log.CircularAppender.append', kind: "functiondeclaration", path: './agora/utils/Log/CircularAppender.append.html', attributes: ["final", "override"]},
{name: 'agora.utils.Log.CircularAppender.mask', kind: "functiondeclaration", path: './agora/utils/Log/CircularAppender.mask.html', attributes: ["final", "override"]},
{name: 'agora.utils.Log.CircularAppender.name', kind: "functiondeclaration", path: './agora/utils/Log/CircularAppender.name.html', attributes: ["override"]},
{name: 'agora.utils.Log.CircularAppender.print', kind: "functiondeclaration", path: './agora/utils/Log/CircularAppender.print.html', attributes: []},
{name: 'agora.utils.Log.Log', kind: "aliasdeclaration", path: './agora/utils/Log/Log.html', attributes: []},
{name: 'agora.utils.Log.Logger', kind: "structdeclaration", path: './agora/utils/Log/Logger.html', attributes: []},
{name: 'agora.utils.Log.Logger.this', kind: "functiondeclaration", path: './agora/utils/Log/Logger.this.html', attributes: []},
{name: 'agora.utils.Log.LogLevel', kind: "aliasdeclaration", path: './agora/utils/Log/LogLevel.html', attributes: []},
{name: 'agora.utils.PrettyPrinter', kind: "module", path: './agora/utils/PrettyPrinter.html', attributes: []},
{name: 'agora.utils.PrettyPrinter.prettify', kind: "functiondeclaration", path: './agora/utils/PrettyPrinter/prettify.html', attributes: ["auto", "nothrow"]},
{name: 'agora.utils.SCPPrettyPrinter', kind: "module", path: './agora/utils/SCPPrettyPrinter.html', attributes: []},
{name: 'agora.utils.SCPPrettyPrinter.GetQSetDg', kind: "aliasdeclaration", path: './agora/utils/SCPPrettyPrinter/GetQSetDg.html', attributes: []},
{name: 'agora.utils.SCPPrettyPrinter.SCPBallotFmt', kind: "structdeclaration", path: './agora/utils/SCPPrettyPrinter/SCPBallotFmt.html', attributes: []},
{name: 'agora.utils.SCPPrettyPrinter.scpPrettify', kind: "functiondeclaration", path: './agora/utils/SCPPrettyPrinter/scpPrettify.html', attributes: ["nothrow", "nogc", "trusted"]},
{name: 'agora.utils.Test', kind: "module", path: './agora/utils/Test.html', attributes: []},
{name: 'agora.utils.Test.genesisSpendable', kind: "functiondeclaration", path: './agora/utils/Test/genesisSpendable.html', attributes: ["auto", "nothrow", "nogc", "safe"]},
{name: 'agora.utils.Test.makeChainedTransactions', kind: "functiondeclaration", path: './agora/utils/Test/makeChainedTransactions.html', attributes: ["safe"]},
{name: 'agora.utils.Test.makeCleanTempDir', kind: "functiondeclaration", path: './agora/utils/Test/makeCleanTempDir.html', attributes: []},
{name: 'agora.utils.Test.OutputRef', kind: "structdeclaration", path: './agora/utils/Test/OutputRef.html', attributes: []},
{name: 'agora.utils.Test.OutputRef.hash', kind: "functiondeclaration", path: './agora/utils/Test/OutputRef.hash.html', attributes: ["nothrow", "safe", "const"]},
{name: 'agora.utils.Test.OutputRef.index', kind: "variabledeclaration", path: './agora/utils/Test/OutputRef.index.html', attributes: []},
{name: 'agora.utils.Test.OutputRef.output', kind: "functiondeclaration", path: './agora/utils/Test/OutputRef.output.html', attributes: ["pure", "nothrow", "nogc", "safe", "const"]},
{name: 'agora.utils.Test.OutputRef.tx', kind: "variabledeclaration", path: './agora/utils/Test/OutputRef.tx.html', attributes: []},
{name: 'agora.utils.Test.retryFor', kind: "functiondeclaration", path: './agora/utils/Test/retryFor.html', attributes: []},
{name: 'agora.utils.Test.TxBuilder', kind: "structdeclaration", path: './agora/utils/Test/TxBuilder.html', attributes: []},
{name: 'agora.utils.Test.TxBuilder.attach', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.attach.html', attributes: ["pure", "nothrow", "ref", "return", "safe"]},
{name: 'agora.utils.Test.TxBuilder.draw', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.draw.html', attributes: ["ref"]},
{name: 'agora.utils.Test.TxBuilder.refund', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.refund.html', attributes: ["ref", "return", "safe"]},
{name: 'agora.utils.Test.TxBuilder.sign', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.sign.html', attributes: ["safe"]},
{name: 'agora.utils.Test.TxBuilder.split', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.split.html', attributes: ["ref"]},
{name: 'agora.utils.Test.TxBuilder.this', kind: "functiondeclaration", path: './agora/utils/Test/TxBuilder.this.html', attributes: ["pure", "nothrow", "ref", "nogc", "safe"]},
{name: 'agora.utils.Test.WK', kind: "structdeclaration", path: './agora/utils/Test/WK.html', attributes: []},
{name: 'agora.utils.Test.WK.Keys', kind: "structdeclaration", path: './agora/utils/Test/WK.Keys.html', attributes: []},
{name: 'agora.utils.Test.WK.Keys.byRange', kind: "functiondeclaration", path: './agora/utils/Test/WK.Keys.byRange.html', attributes: ["auto", "static"]},
{name: 'agora.utils.Test.WK.Keys.opIndex', kind: "functiondeclaration", path: './agora/utils/Test/WK.Keys.opIndex.html', attributes: ["static", "nothrow", "nogc", "safe"]},
{name: 'agora.utils.Test.WK.Keys.this', kind: "functiondeclaration", path: './agora/utils/Test/WK.Keys.this.html', attributes: ["disable"]},
{name: 'agora.utils.Test.WK.this', kind: "functiondeclaration", path: './agora/utils/Test/WK.this.html', attributes: ["disable"]},
{name: 'agora.utils.WellKnownKeys', kind: "module", path: './agora/utils/WellKnownKeys.html', attributes: []},
{name: 'agora.utils.WellKnownKeys.A', kind: "variabledeclaration", path: './agora/utils/WellKnownKeys/A.html', attributes: []},
{name: 'agora.utils.WellKnownKeys.Genesis', kind: "variabledeclaration", path: './agora/utils/WellKnownKeys/Genesis.html', attributes: []},
{name: 'scpd.quorum.QuorumIntersectionChecker', kind: "module", path: './scpd/quorum/QuorumIntersectionChecker.html', attributes: []},
{name: 'scpd.quorum.QuorumIntersectionChecker.QuorumIntersectionChecker', kind: "classdeclaration", path: './scpd/quorum/QuorumIntersectionChecker/QuorumIntersectionChecker.html', attributes: []},
{name: 'scpd.quorum.QuorumIntersectionChecker.QuorumIntersectionChecker.create', kind: "functiondeclaration", path: './scpd/quorum/QuorumIntersectionChecker/QuorumIntersectionChecker.create.html', attributes: ["static", "trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumIntersectionChecker.QuorumIntersectionChecker.getMaxQuorumsFound', kind: "functiondeclaration", path: './scpd/quorum/QuorumIntersectionChecker/QuorumIntersectionChecker.getMaxQuorumsFound.html', attributes: ["abstract", "trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumIntersectionChecker.QuorumIntersectionChecker.getPotentialSplit', kind: "functiondeclaration", path: './scpd/quorum/QuorumIntersectionChecker/QuorumIntersectionChecker.getPotentialSplit.html', attributes: ["abstract", "trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumIntersectionChecker.QuorumIntersectionChecker.networkEnjoysQuorumIntersection', kind: "functiondeclaration", path: './scpd/quorum/QuorumIntersectionChecker/QuorumIntersectionChecker.networkEnjoysQuorumIntersection.html', attributes: ["abstract", "trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumTracker', kind: "module", path: './scpd/quorum/QuorumTracker.html', attributes: []},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker', kind: "structdeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.html', attributes: []},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker.expand', kind: "functiondeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.expand.html', attributes: ["trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker.getQuorum', kind: "functiondeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.getQuorum.html', attributes: ["ref", "trusted", "extern(C++)", "const"]},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker.isNodeDefinitelyInQuorum', kind: "functiondeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.isNodeDefinitelyInQuorum.html', attributes: ["trusted", "extern(C++)"]},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker.QuorumMap', kind: "aliasdeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.QuorumMap.html', attributes: []},
{name: 'scpd.quorum.QuorumTracker.QuorumTracker.this', kind: "functiondeclaration", path: './scpd/quorum/QuorumTracker/QuorumTracker.this.html', attributes: ["ref", "trusted", "extern(C++)"]},
{name: 'scpd.scp.BallotProtocol', kind: "module", path: './scpd/scp/BallotProtocol.html', attributes: []},
{name: 'scpd.scp.BallotProtocol.BallotProtocol', kind: "structdeclaration", path: './scpd/scp/BallotProtocol/BallotProtocol.html', attributes: []},
{name: 'scpd.scp.BallotProtocol.BallotProtocol.mLastEnvelope', kind: "variabledeclaration", path: './scpd/scp/BallotProtocol/BallotProtocol.mLastEnvelope.html', attributes: []},
{name: 'scpd.scp.BallotProtocol.BallotProtocol.mLastEnvelopeEmit', kind: "variabledeclaration", path: './scpd/scp/BallotProtocol/BallotProtocol.mLastEnvelopeEmit.html', attributes: []},
{name: 'scpd.scp.BallotProtocol.BallotProtocol.this', kind: "functiondeclaration", path: './scpd/scp/BallotProtocol/BallotProtocol.this.html', attributes: ["extern(C++)"]},
{name: 'scpd.scp.LocalNode', kind: "module", path: './scpd/scp/LocalNode.html', attributes: []},
{name: 'scpd.scp.NominationProtocol', kind: "module", path: './scpd/scp/NominationProtocol.html', attributes: []},
{name: 'scpd.scp.QuorumSetUtils', kind: "module", path: './scpd/scp/QuorumSetUtils.html', attributes: []},
{name: 'scpd.scp.SCP', kind: "module", path: './scpd/scp/SCP.html', attributes: []},
{name: 'scpd.scp.SCPDriver', kind: "module", path: './scpd/scp/SCPDriver.html', attributes: []},
{name: 'scpd.scp.Slot', kind: "module", path: './scpd/scp/Slot.html', attributes: []},
{name: 'scpd.scp.Slot.Slot', kind: "structdeclaration", path: './scpd/scp/Slot/Slot.html', attributes: []},
{name: 'scpd.scp.Utils', kind: "module", path: './scpd/scp/Utils.html', attributes: []},
{name: 'scpd.scp.Utils.createSCP', kind: "functiondeclaration", path: './scpd/scp/Utils/createSCP.html', attributes: ["extern(C++)"]},
{name: 'scpd.tests.GlueTypes', kind: "module", path: './scpd/tests/GlueTypes.html', attributes: []},
{name: 'scpd.tests.GlueTypes.GlueTypes', kind: "aliasdeclaration", path: './scpd/tests/GlueTypes/GlueTypes.html', attributes: []},
{name: 'scpd.tests.GlueTypes.TypesNoLayout', kind: "aliasdeclaration", path: './scpd/tests/GlueTypes/TypesNoLayout.html', attributes: []},
{name: 'scpd.tests.LayoutTest', kind: "module", path: './scpd/tests/LayoutTest.html', attributes: []},
{name: 'scpd.tests.LayoutTest.FieldInfo', kind: "structdeclaration", path: './scpd/tests/LayoutTest/FieldInfo.html', attributes: []},
{name: 'scpd.tests.SizeTest', kind: "module", path: './scpd/tests/SizeTest.html', attributes: []},
{name: 'scpd.types.Stellar_SCP', kind: "module", path: './scpd/types/Stellar_SCP.html', attributes: []},
{name: 'scpd.types.Stellar_SCP.SCPQuorumSetPtr', kind: "aliasdeclaration", path: './scpd/types/Stellar_SCP/SCPQuorumSetPtr.html', attributes: []},
{name: 'scpd.types.Stellar_types', kind: "module", path: './scpd/types/Stellar_types.html', attributes: []},
{name: 'scpd.types.Utils', kind: "module", path: './scpd/types/Utils.html', attributes: []},
{name: 'scpd.types.Utils.toVec', kind: "functiondeclaration", path: './scpd/types/Utils/toVec.html', attributes: ["nothrow", "nogc"]},
{name: 'scpd.types.XDRBase', kind: "module", path: './scpd/types/XDRBase.html', attributes: []},
{name: 'scpd.types.XDRBase.opaque_array', kind: "structdeclaration", path: './scpd/types/XDRBase/opaque_array.html', attributes: []},
{name: 'scpd.types.XDRBase.opaque_vec', kind: "aliasdeclaration", path: './scpd/types/XDRBase/opaque_vec.html', attributes: []},
{name: 'scpd.types.XDRBase.xdr_runtime_error', kind: "classdeclaration", path: './scpd/types/XDRBase/xdr_runtime_error.html', attributes: []},
{name: 'scpd.Cpp', kind: "module", path: './scpd/Cpp.html', attributes: []},
{name: 'scpd.Cpp.allocator', kind: "structdeclaration", path: './scpd/Cpp/allocator.html', attributes: []},
{name: 'scpd.Cpp.callCPPDelegate', kind: "functiondeclaration", path: './scpd/Cpp/callCPPDelegate.html', attributes: ["extern(C++)"]},
{name: 'scpd.Cpp.CPPDelegate', kind: "structdeclaration", path: './scpd/Cpp/CPPDelegate.html', attributes: []},
{name: 'scpd.Cpp.duration', kind: "structdeclaration", path: './scpd/Cpp/duration.html', attributes: []},
{name: 'scpd.Cpp.exception', kind: "classdeclaration", path: './scpd/Cpp/exception.html', attributes: []},
{name: 'scpd.Cpp.make_shared', kind: "functiondeclaration", path: './scpd/Cpp/make_shared.html', attributes: ["extern(C++)"]},
{name: 'scpd.Cpp.map', kind: "structdeclaration", path: './scpd/Cpp/map.html', attributes: []},
{name: 'scpd.Cpp.milli', kind: "aliasdeclaration", path: './scpd/Cpp/milli.html', attributes: []},
{name: 'scpd.Cpp.milliseconds', kind: "aliasdeclaration", path: './scpd/Cpp/milliseconds.html', attributes: []},
{name: 'scpd.Cpp.SCPCallback', kind: "aliasdeclaration", path: './scpd/Cpp/SCPCallback.html', attributes: []},
{name: 'scpd.Cpp.set', kind: "structdeclaration", path: './scpd/Cpp/set.html', attributes: []},
{name: 'scpd.Cpp.set.empty', kind: "functiondeclaration", path: './scpd/Cpp/set.empty.html', attributes: ["const", "pure", "nothrow", "nogc"]},
{name: 'scpd.Cpp.set.opApply', kind: "functiondeclaration", path: './scpd/Cpp/set.opApply.html', attributes: ["const"]},
{name: 'scpd.Cpp.shared_ptr', kind: "structdeclaration", path: './scpd/Cpp/shared_ptr.html', attributes: []},
{name: 'scpd.Cpp.unique_ptr', kind: "structdeclaration", path: './scpd/Cpp/unique_ptr.html', attributes: []},
{name: 'scpd.Cpp.unordered_map', kind: "structdeclaration", path: './scpd/Cpp/unordered_map.html', attributes: []},
{name: 'scpd.Cpp.unordered_map.create', kind: "functiondeclaration", path: './scpd/Cpp/unordered_map.create.html', attributes: ["static", "pure", "nothrow", "nogc", "trusted"]},
{name: 'scpd.Cpp.vector', kind: "structdeclaration", path: './scpd/Cpp/vector.html', attributes: []},
{name: 'scpd.Cpp.vector.ConstIterator', kind: "structdeclaration", path: './scpd/Cpp/vector.ConstIterator.html', attributes: []},
];
